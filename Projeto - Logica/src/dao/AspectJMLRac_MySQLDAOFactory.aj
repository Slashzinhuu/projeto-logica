package dao;

import org.jmlspecs.ajmlrac.runtime.*;

public privileged aspect AspectJMLRac_MySQLDAOFactory {



  /** Generated by JML to check the exceptional postcondition of
   * method createDAOFuncionario. */
  after (final dao.MySQLDAOFactory object$rac) throwing (Throwable rac$e) :
     execution(dao.DAOFuncionario dao.MySQLDAOFactory.createDAOFuncionario()) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.MySQLDAOFactory.createDAOFuncionario()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.MySQLDAOFactory.createDAOFuncionario regarding code at \nFile \"dao.MySQLDAOFactory.java\", line 11 (dao.MySQLDAOFactory.java:11)";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.MySQLDAOFactory.createDAOFuncionario()");
  	 }

  /** Generated by JML to check the exceptional postcondition of
   * method createDAOMercadoria. */
  after (final dao.MySQLDAOFactory object$rac) throwing (Throwable rac$e) :
     execution(dao.DAOMercadoria dao.MySQLDAOFactory.createDAOMercadoria()) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.MySQLDAOFactory.createDAOMercadoria()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.MySQLDAOFactory.createDAOMercadoria regarding code at \nFile \"dao.MySQLDAOFactory.java\", line 16 (dao.MySQLDAOFactory.java:16)";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.MySQLDAOFactory.createDAOMercadoria()");
  	 }

  /** Generated by JML to check the exceptional postcondition of
   * method createDAOVendas. */
  after (final dao.MySQLDAOFactory object$rac) throwing (Throwable rac$e) :
     execution(dao.DAOVendas dao.MySQLDAOFactory.createDAOVendas()) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.MySQLDAOFactory.createDAOVendas()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.MySQLDAOFactory.createDAOVendas regarding code at \nFile \"dao.MySQLDAOFactory.java\", line 21 (dao.MySQLDAOFactory.java:21)";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.MySQLDAOFactory.createDAOVendas()");
  	 }




  /** Generated by JML to throw satisfied and violated predicates
    *  from multiple spec case checking (if on), and to hide specific
    *  aspect stack trace elements from error reporting. */ 
  public static aspect UtilMultipleSpecCaseCheckingAndStackTraceHiding_MySQLDAOFactory{
    declare precedence: UtilMultipleSpecCaseCheckingAndStackTraceHiding_MySQLDAOFactory, AspectJMLRac*;

    after() throwing (Throwable rac$e): (execution( * dao.MySQLDAOFactory+.*(..))
            || execution(dao.MySQLDAOFactory+.new(..))){
      JMLChecker.hideAjmlSpecificStackTrace(rac$e);
    }
  }
}
