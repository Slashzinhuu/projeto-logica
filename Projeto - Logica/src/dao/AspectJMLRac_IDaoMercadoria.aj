package dao;

import org.jmlspecs.ajmlrac.runtime.*;

public privileged aspect AspectJMLRac_IDaoMercadoria {





  /** Generated by JML to check the exceptional postcondition of
   * method buscarMercadoria_ID. */
  after (final dao.IDaoMercadoria object$rac, final java.lang.String ID) throwing (Throwable rac$e) :
     execution(models.mercadoria.IMercadoria dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String)) && this(object$rac) && args(ID) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String ID)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.IDaoMercadoria.buscarMercadoria_ID regarding specifications at \nFile \"dao.IDaoMercadoria.java\"";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String ID)");
  	 }

  /** Generated by JML to check the exceptional postcondition of
   * method listarMercadorias. */
  after (final dao.IDaoMercadoria object$rac) throwing (Throwable rac$e) :
     execution(java.util.List dao.IDaoMercadoria.listarMercadorias()) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.IDaoMercadoria.listarMercadorias()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.IDaoMercadoria.listarMercadorias regarding specifications at \nFile \"dao.IDaoMercadoria.java\"";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.IDaoMercadoria.listarMercadorias()");
  	 }


  /** Generated by JML to check the precondition of
   * method criarMercadoria. */
  before (final dao.IDaoMercadoria object$rac, final models.mercadoria.IMercadoria mercadoria) :
     execution(void dao.IDaoMercadoria.criarMercadoria(models.mercadoria.IMercadoria)) && 
     this(object$rac) && args(mercadoria) {
       boolean rac$b = (mercadoria != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.IDaoMercadoria.criarMercadoria regarding specifications at \nFile \"dao.IDaoMercadoria.java\", when \n\t\'mercadoria\' is "+mercadoria;
       String evalErrorMsg = "Invalid expression in \"dao.IDaoMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.IDaoMercadoria.criarMercadoria(models.mercadoria.IMercadoria mercadoria)");

     }

  /** Generated by JML to check the precondition of
   * method editarMercadoria. */
  before (final dao.IDaoMercadoria object$rac, final models.mercadoria.IMercadoria mercadoria) :
     execution(void dao.IDaoMercadoria.editarMercadoria(models.mercadoria.IMercadoria)) && 
     this(object$rac) && args(mercadoria) {
       boolean rac$b = (mercadoria != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.IDaoMercadoria.editarMercadoria regarding specifications at \nFile \"dao.IDaoMercadoria.java\", when \n\t\'mercadoria\' is "+mercadoria;
       String evalErrorMsg = "Invalid expression in \"dao.IDaoMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.IDaoMercadoria.editarMercadoria(models.mercadoria.IMercadoria mercadoria)");

     }

  /** Generated by JML to check the precondition of
   * method buscarMercadoria_ID. */
  before (final dao.IDaoMercadoria object$rac, final java.lang.String ID) :
     execution(models.mercadoria.IMercadoria dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String)) && 
     this(object$rac) && args(ID) {
       boolean rac$b = (ID != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.IDaoMercadoria.buscarMercadoria_ID regarding specifications at \nFile \"dao.IDaoMercadoria.java\", when \n\t\'ID\' is "+ID;
       String evalErrorMsg = "Invalid expression in \"dao.IDaoMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String ID)");

     }



  /** Generated by JML to enhance precondition checking */
  public static aspect UtilPreconditionChecking_IDaoMercadoria{
    declare precedence: AspectJMLRac*, UtilPreconditionChecking_IDaoMercadoria;
    before(): (execution(void dao.IDaoMercadoria.criarMercadoria(models.mercadoria.IMercadoria))
            || execution(void dao.IDaoMercadoria.editarMercadoria(models.mercadoria.IMercadoria))
            || execution(models.mercadoria.IMercadoria dao.IDaoMercadoria.buscarMercadoria_ID(java.lang.String))){
      JMLChecker.hasAnyThrownPrecondition();
    }
  }

  /** Generated by JML to throw satisfied and violated predicates
    *  from multiple spec case checking (if on), and to hide specific
    *  aspect stack trace elements from error reporting. */ 
  public static aspect UtilMultipleSpecCaseCheckingAndStackTraceHiding_IDaoMercadoria{
    declare precedence: UtilMultipleSpecCaseCheckingAndStackTraceHiding_IDaoMercadoria, AspectJMLRac*;

    after() throwing (Throwable rac$e): (execution( * dao.IDaoMercadoria+.*(..))
            || execution(dao.IDaoMercadoria+.new(..))){
      JMLChecker.hideAjmlSpecificStackTrace(rac$e);
    }
  }
}
