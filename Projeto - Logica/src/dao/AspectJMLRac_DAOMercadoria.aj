package dao;

import org.jmlspecs.ajmlrac.runtime.*;

public privileged aspect AspectJMLRac_DAOMercadoria {






  /** Generated by JML to check the exceptional postcondition of
   * method buscarMercadoria_ID. */
  after (final dao.DAOMercadoria object$rac, final java.lang.String ID) throwing (Throwable rac$e) :
     execution(models.mercadoria.IMercadoria dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String)) && this(object$rac) && args(ID) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String ID)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.DAOMercadoria.buscarMercadoria_ID regarding code at \nFile \"dao.DAOMercadoria.java\", line 107 (dao.DAOMercadoria.java:107)";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String ID)");
  	 }

  /** Generated by JML to check the exceptional postcondition of
   * method listarMercadorias. */
  after (final dao.DAOMercadoria object$rac) throwing (Throwable rac$e) :
     execution(java.util.List dao.DAOMercadoria.listarMercadorias()) && this(object$rac) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "dao.DAOMercadoria.listarMercadorias()");
           boolean rac$b = true;
           String rac$ErrorMsg = "";
           String xPostErrorMsg =  "by method dao.DAOMercadoria.listarMercadorias regarding code at \nFile \"dao.DAOMercadoria.java\", line 135 (dao.DAOMercadoria.java:135)";
           if(rac$ErrorMsg.indexOf("and") >= 0){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
           JMLChecker.checkExceptionalPostcondition(rac$b, xPostErrorMsg+"\n\t"+rac$ErrorMsg+rac$e, -1, false, "dao.DAOMercadoria.listarMercadorias()");
  	 }


  /** Generated by JML to check the precondition of
   * method criarMercadoria. */
  before (final dao.DAOMercadoria object$rac, final models.mercadoria.IMercadoria mercadoria) :
     execution(void dao.DAOMercadoria.criarMercadoria(models.mercadoria.IMercadoria)) && 
     this(object$rac) && args(mercadoria) {
       boolean rac$b = (mercadoria != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.DAOMercadoria.criarMercadoria regarding code at \nFile \"dao.DAOMercadoria.java\", line 35 (dao.DAOMercadoria.java:35)"+", when \n"+"\t\'mercadoria\' is "+mercadoria;
       String evalErrorMsg = "Invalid expression in \"dao.DAOMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.DAOMercadoria.criarMercadoria(models.mercadoria.IMercadoria mercadoria)");

     }

  /** Generated by JML to check the precondition of
   * method editarMercadoria. */
  before (final dao.DAOMercadoria object$rac, final models.mercadoria.IMercadoria mercadoria) :
     execution(void dao.DAOMercadoria.editarMercadoria(models.mercadoria.IMercadoria)) && 
     this(object$rac) && args(mercadoria) {
       boolean rac$b = (mercadoria != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.DAOMercadoria.editarMercadoria regarding code at \nFile \"dao.DAOMercadoria.java\", line 55 (dao.DAOMercadoria.java:55)"+", when \n"+"\t\'mercadoria\' is "+mercadoria;
       String evalErrorMsg = "Invalid expression in \"dao.DAOMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.DAOMercadoria.editarMercadoria(models.mercadoria.IMercadoria mercadoria)");

     }

  /** Generated by JML to check the precondition of
   * method buscarMercadoria_ID. */
  before (final dao.DAOMercadoria object$rac, final java.lang.String ID) :
     execution(models.mercadoria.IMercadoria dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String)) && 
     this(object$rac) && args(ID) {
       boolean rac$b = (ID != null);
       boolean canThrow = false;
       String preErrorMsg = "by method dao.DAOMercadoria.buscarMercadoria_ID regarding code at \nFile \"dao.DAOMercadoria.java\", line 85 (dao.DAOMercadoria.java:85)"+", when \n"+"\t\'ID\' is "+ID;
       String evalErrorMsg = "Invalid expression in \"dao.DAOMercadoria.java\"\nCaused by: ";
       JMLChecker.checkPrecondition(rac$b, canThrow, preErrorMsg, evalErrorMsg, -1, false, "dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String ID)");

     }



  /** Generated by JML to enhance precondition checking */
  public static aspect UtilPreconditionChecking_DAOMercadoria{
    declare precedence: AspectJMLRac*, UtilPreconditionChecking_DAOMercadoria;
    before(): (execution(void dao.DAOMercadoria.criarMercadoria(models.mercadoria.IMercadoria))
            || execution(void dao.DAOMercadoria.editarMercadoria(models.mercadoria.IMercadoria))
            || execution(models.mercadoria.IMercadoria dao.DAOMercadoria.buscarMercadoria_ID(java.lang.String))){
      JMLChecker.hasAnyThrownPrecondition();
    }
  }

  /** Generated by JML to throw satisfied and violated predicates
    *  from multiple spec case checking (if on), and to hide specific
    *  aspect stack trace elements from error reporting. */ 
  public static aspect UtilMultipleSpecCaseCheckingAndStackTraceHiding_DAOMercadoria{
    declare precedence: UtilMultipleSpecCaseCheckingAndStackTraceHiding_DAOMercadoria, AspectJMLRac*;

    after() throwing (Throwable rac$e): (execution( * dao.DAOMercadoria+.*(..))
            || execution(dao.DAOMercadoria+.new(..))){
      JMLChecker.hideAjmlSpecificStackTrace(rac$e);
    }
  }
}
